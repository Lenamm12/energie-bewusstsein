import"./style.css";import*as THREE from"three";import{OrbitControls}from"three/examples/jsm/controls/OrbitControls.js";import{Color}from"three";import{GLTFLoader}from"three/examples/jsm/loaders/GLTFLoader.js";import{DRACOLoader}from"three/examples/jsm/loaders/DRACOLoader.js";const canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,sizes={width:0,height:0};setSize();const dracoLoader=new DRACOLoader;dracoLoader.setDecoderPath("/draco/");const gltfLoader=new GLTFLoader;gltfLoader.setDRACOLoader(dracoLoader);let mixer=null;gltfLoader.load("/modell/haus.glb",(e=>{for(console.log("success"),console.log(e),e.scene.scale.set(.025,.025,.025);e.scene.children.length;){var t=e.scene.children[0];scene.add(t)}scene.rotateY(100)}),(e=>{console.log("progress"),console.log(e)}),(e=>{console.log("error"),console.log(e)}));const ambientLight=new THREE.AmbientLight(16777215,.8);scene.add(ambientLight);const directionalLight=new THREE.DirectionalLight(16777215,.6);directionalLight.castShadow=!0,directionalLight.shadow.mapSize.set(1024,1024),directionalLight.shadow.camera.far=15,directionalLight.shadow.camera.left=-7,directionalLight.shadow.camera.top=7,directionalLight.shadow.camera.right=7,directionalLight.shadow.camera.bottom=-7,directionalLight.position.set(-5,5,0),scene.add(directionalLight);const camera=new THREE.PerspectiveCamera(75,sizes.width/sizes.height);camera.position.set(-7,2,-5),scene.add(camera);const controls=new OrbitControls(camera,canvas);controls.target.set(0,.75,0),controls.enableDamping=!0;const renderer=new THREE.WebGLRenderer({canvas,alpha:!0});function setSize(){var e=document.getElementById("aside");window.innerWidth>=768&&e.classList.contains("change")?(sizes.width=.95*window.innerWidth,sizes.height=window.innerHeight):window.innerWidth>=768?(sizes.width=.5*window.innerWidth,sizes.height=window.innerHeight):(sizes.width=window.innerWidth,sizes.height=window.innerHeight,e.classList.add("change"))}renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),renderer.render(scene,camera),document.addEventListener("resize",(()=>{setSize(),camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))})),window.addEventListener("dblclick",(()=>{document.fullscreenElement||document.webkitFullscreenElement?document.exitFullscreen?document.exitFullscreen():document.webkitExitFullscreen&&document.webkitExitFullscreen():canvas.requestFullscreen?canvas.requestFullscreen():canvas.webkitRequestFullscreen&&canvas.webkitRequestFullscreen()}));const cursor={x:0,y:0};window.addEventListener("mousemove",(e=>{cursor.x=e.clientX/sizes.width-.5,cursor.y=-(e.clientY/sizes.height-.5)}));const clock=new THREE.Clock;let previousTime=0;const tick=()=>{const e=clock.getElapsedTime();previousTime=e,controls.update(),renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();